services:
  freqtrade:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: freqtrade
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./data/parquet:/data/parquet
    ports:
      - "8080:8080"  # LIVE
      - "8081:8081"  # A
      - "8082:8082"  # B
      - "8083:8083"  # D (FreqAI)
#    command: >
#      trade
#      --datadir /freqtrade/user_data/data/hyperliquid
#      --logfile /freqtrade/user_data/logs/freqtrade.log
#      --db-url sqlite:////freqtrade/user_data/tradesv3.sqlite
#      --config /freqtrade/user_data/config_freqai.example.json
#      --freqaimodel LightGBMRegressor
#      --strategy FreqaiExampleStrategy


  ingestors:
    build:
      context: ./services/ingestors
      dockerfile: Dockerfile.ingestor
    container_name: ingestors
    env_file:
      - .env
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./data/parquet:/data/parquet
      - type: bind
        source: ./services/ingestors/run.py   # ← tu script en el host
        target: /app/run.py                   # ← se “inyecta” en el contenedor
        read_only: true
    command: ["bash","-lc","python -u /app/run.py"]
    restart: unless-stopped

  dashboard:
    build: ./services/dashboard
    container_name: dashboard
    env_file:
      - .env
    ports:
      - "8501:8501"
    volumes:
      - ./data/parquet:/data/parquet
      - ./user_data:/freqtrade/user_data
    command: ["bash","-c","streamlit run app.py --server.address=0.0.0.0 --server.port=8501"]
    restart: unless-stopped

#  gateway:
#    build: ./services/gateway
#    container_name: gateway
#    env_file:
#      - .env
#    ports:
#      - "8000:8000"
#    volumes:
#      - ./user_data:/freqtrade/user_data
#    restart: unless-stopped

#  telegram_bot:
#    build: ./services/chat
#    container_name: telegram_bot
#    env_file:
#      - .env
#    depends_on:
#      - freqtrade
#    restart: unless-stopped

